version: '3.9'

services:
  database:
    env_file:
      - .env
    image: postgres:alpine
    networks:
      - custom
    volumes:
      - databsedata:$POSTGRES_DATA
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    hostname: ${TYPEORM_HOST}
    expose:
      - ${POSTGRES_PORT}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    deploy:
      restart_policy:
        condition: on-failure
  app:
    env_file:
      - .env
    image: my-rss-docker
    build: .
    networks:
      - custom
    depends_on:
      - database
    volumes:
      - .:$SRC_VOLUME
    ports:
      - "$PORT:$PORT"
    environment: 
      - DB_TYPE=${DB_TYPE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SYNC=false
      - POSTGRES_PORT=${POSTGRES_PORT}
    deploy:
      restart_policy:
        condition: on-failure
    command: npm run start:dev
networks:
  custom:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: 'true'
volumes:
  databsedata: